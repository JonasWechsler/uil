{
  "name": "node-mariadb",
  "description": "A pure javascript client for mariadb",
  "version": "0.1.1",
  "author": {
    "name": "noppoMan",
    "email": "yuki@miketokyo.com",
    "url": "http://miketokyo.com"
  },
  "contributors": [],
  "repository": {
    "type": "git",
    "url": "https://github.com/noppoMan/node-mariadb.git"
  },
  "main": "./index.js",
  "homepage": "http://miketokyo.com",
  "devDependencies": {
    "should": "2.0.2",
    "mysql": "2.0.0-alpha9",
    "async": "0.2.9"
  },
  "keywords": [
    "mariadb",
    "handlersocket",
    "non-blocking"
  ],
  "scripts": {
    "test": "find ./test -name *_test.js | xargs mocha --reporter spec"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.8"
  },
  "bugs": {
    "url": "https://github.com/noppoMan/node-mariadb/issues"
  },
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "should": "~2.0.2",
    "async": "~0.2.9",
    "mysql": "~2.0.0-alpha9"
  },
  "readme": "node-mariadb\n=========================\n\nNode-mariadb is a pure javascript client for mariadb.  \nSome Drivers have compatibility with mysql.  \nOur goal is supporting almost functions and protocols of mariadb.  \n\n<b>The latest version of node-mariadb supported only HandlerSocket Driver(ver 0.1.1).</b>\n\n[![Build Status](https://travis-ci.org/noppoMan/node-mariadb.png?branch=master)](https://travis-ci.org/noppoMan/node-mariadb)\n[![NPM version](https://badge.fury.io/js/node-mariadb.png)](http://badge.fury.io/js/node-mariadb)\n\n## Supported protocols and functions.\n* HandlerSocket\n\n### Future  (Not implemented yet)\n* Regular mysql protocol\n* Galera cluster\n* Non-blocking api client\n\n\n## Installation\n<pre>\n$ npm install node-mariadb\n</pre>\n\n## Basic Sample of HandlerSocket Driver (Read).\n\n```javascript\nvar nodeMaria = require('node-mariadb');\n\n//hs readable configuration.\nvar connection = nodeMaria.createConnection({\n  driverType: nodeMaria.DRIVER_TYPE_HANDLER_SOCKET,\n  host:'localhost',\n  port:9998\n});\n\nconnection.on('erorr', function(err){\n  console.log(err);\n  process.exit(1);\n});\n\nconnection.on('connect', function(){\n  \n  ### Basic find.\n  connection.openIndex('CTU', 'employee', nodeMaria.HandlerSocket.PRIMARY, ['id', 'name', 'age']\n  , function(err, hs){\n    hs.find([1], {limit:1},function(err, data){\n      console.log(data);   =>  [{id: '1', name: 'jack', age: '40'}]\n    });\n  });\n\n\n  ### Find with in clause\n  connection.openIndex('CTU', 'employee', nodeMaria.HandlerSocket.PRIMARY, ['id', 'name', 'age'], ['id']\n  , function(err, hs){\n    hs.find({in: [1, 2, 3]}, {limit: 3}, function(err, data){\n      console.log(data);   =>  [{id: '2', name: 'Tonny', age: '38'}, .... ]\n    });\n  });\n\n\n  ### Find with filter\n  connection.openIndex('CTU', 'employee', 'age', ['id', 'name', 'age'], ['age']\n  , function(err, hs){\n    hs.find([26], {operator: '>', limit:5, filter:['age', '<=', 28]}, function(err, data){\n      console.log(data);   =>  [{id: '2', name: 'Chloe', age: '35'}, ..... ]\n    });\n  });\n  \n});\n```\n\n## Basic Sample of HandlerSocket Driver (Write).\n\n```javascript\nvar nodeMaria = require('node-mariadb');\n\n//hs writeable configuration.\nvar connection = nodeMaria.createConnection({\n  driverType: nodeMaria.DRIVER_TYPE_HANDLER_SOCKET,\n  host:'localhost',\n  port:9999\n});\n\nconnection.on('erorr', function(err){\n  console.log(err);\n  process.exit(1);\n});\n\nconnection.on('connect', function(){\n  \n  ### Insert\n  connection.openIndex('CTU', 'employee', nodeMaria.HandlerSocket.PRIMARY, ['id', 'name', 'age']\n  , function(err, hs){\n    hs.insert([10, 'Edgar', 35],function(err, data){\n      console.log(data);   => true\n    });\n  });\n\n\n  ### Update\n  connection.openIndex('CTU', 'employee', nodeMaria.HandlerSocket.PRIMARY, ['id', 'name', 'age'], ['id']\n  , function(err, hs){\n    hs.update([12], {set:[12, 'Bill', 50]}, function(err, affectedNum){\n      console.log(affectedNum);   =>  1\n    });\n  });\n  \n  ### Delete\n  connection.openIndex('CTU', 'employee', nodeMaria.HandlerSocket.PRIMARY, ['id']\n  , function(err, hs){\n    hs.delete([1], function(err, affectedNum){\n      console.log(affectedNum);   =>  1\n    });\n  });\n\n});\n```\n\n\n# Api Reference \n\n### createConnection\n\n#### nodeMaria.createConnection(Object settings, [Object options])\n\n#### Arguments\n* `settings`: \n - driverType: A driver type name. Currently suppoerted only HandlerSocket.\n - host: A host name or address for mariadb server.\n - port: A port number for mariadb server.\n - auth: {key: 'Your authnetication key'}\n* `options`: Options(debug, logging, etc...). (Not implemented yet.)\n\n----\n\n### Constants\n##### nodeMaria.DRIVER_TYPE_MYSQL_REGULAR_PROTOCOL\n##### nodeMaria.DRIVER_TYPE_HANDLER_SOCKET\n\n----\n\n### Events\n#### connect \nEmitted when a connection is established.\n\n#### error \nEmitted when an error is occured.\n\n####close\nEmitted when a connection is closed.\n\n----\n\n## HandlerSocket\n\n### openIndex\n#### con.openIndex(Array config, Function callback&lt;Object error, Object Index&gt;)\nopen index to prepare to handle records.\n\n#### Arguments\n* `config`\n 1. A database name\n 2. A table name\n 3. An index name. If you would like to use 'Primary', you can use constant of Handlersocket.PRIMARY.\n 4. An array of column names.\n 5. optional [An array of column names use for filter or while filter.]\n* `callback`: Callback function\n\n----\n\n### Find\n#### hs.find(Any values, [Object options], Function callback&lt;Object error, Array data&gt;)\nFind records by values and options.\n\n#### Arguments\n* `values` : [value1, value2, ... ] or {in: [value1, value2, ... ]}\n* `options`: \n - limit: num (default 1)\n - offset: num (default 0)\n - operator: `=`,`>`,`>=`,`<`and`<=`\n - filter: ['indexname', 'operator', 'value']\n - while: ['indexname', 'operator', 'value']\n* `callback`: callback function.\n\n----\n\n### Insert\n#### hs.insert(Array values, [Object options], Function callback&lt;Object error, Bool isSuccess&gt;)\nInsert record.\n\n#### Arguments\n* `values` : [value1, value2, ... ]\n* `callback`: callback function.\n\n----\n\n### Update\n#### hs.update(Any values, [Object options], Function callback&lt;Object error, Number affectedNum&gt;)\nUpdate rows by values and options.  \nIt arguments are similar to find. A only different is 'set' option which is used to set updating values like as 'update' clause of sql.\n\n#### Arguments\n* `values` : [value1, value2, ... ] or {in: [value1, value2, ... ]}\n* `options`: \n - set(required): [value1, value2, .... ]\n - limit: num (default 1)\n - offset: num (default 0)\n - operator: `=`,`>`,`>=`,`<`and`<=`\n - filter: ['indexname', 'operator', 'value']\n - while: ['indexname', 'operator', 'value']\n* `callback`: callback function.\n\n----\n\n\n### Delete\n#### hs.delete(Any values, [Object options], Function callback&lt;Object error, Number affectedNum&gt;)\nDelete records by values and options. It arguments are same as find.\n\n#### Arguments\n* `values` : [value1, value2, ... ] or {in: [value1, value2, ... ]}\n* `options`: \n - limit: num (default 1)\n - offset: num (default 0)\n - operator: `=`,`>`,`>=`,`<`and`<=`\n - filter: ['indexname', 'operator', 'value']\n - while: ['indexname', 'operator', 'value']\n* `callback`: callback function.\n\n----\n\n### Increment\n#### hs.increment(Any values, [Object options], Function callback&lt;Object error, Number affectedNum&gt;)\nIncrement records '+' options num.\n\n#### Arguments\n* `values` : [value1, value2, ... ] or {in: [value1, value2, ... ]}\n* `options`: \n - '+': num\n - limit: num (default 1)\n - offset: num (default 0)\n - operator: `=`,`>`,`>=`,`<`and`<=`\n - filter: ['indexname', 'operator', 'value']\n - while: ['indexname', 'operator', 'value']\n* `callback`: callback function.\n\n----\n\n### Decrement\n#### hs.delete(Any values, [Object options], Function callback&lt;Object error, Number affectedNum&gt;)\nDecrement records '-' options num.\n\n#### Arguments\n* `values` : [value1, value2, ... ] or {in: [value1, value2, ... ]}\n* `options`: \n - '-': num\n - limit: num (default 1)\n - offset: num (default 0)\n - operator: `=`,`>`,`>=`,`<`and`<=`\n - filter: ['indexname', 'operator', 'value']\n - while: ['indexname', 'operator', 'value']\n* `callback`: callback function.\n\n----\n\n### [Modifier]Get\n\n[Modifier]Get behavior is same as normal modifier(Such as update, delete, increment and decrement).  \nBut, their return values are not affected num but records which are contents of the records before modification.\n\n##### hs.updateGet(Any values, [Object options], Function callback&lt;Object error, Array beforeModRecords&gt;)\n##### hs.deleteGet(Any values, [Object options], Function callback&lt;Object error, Array beforeModRecords&gt;)\n##### hs.incrementGet(Any values, [Object options], Function callback&lt;Object error, Array beforeModRecords&gt;)\n##### hs.decrementGet(Any values, [Object options], Function callback&lt;Object error, Array beforeModRecords&gt;)\n\n\n\n\n## Run Test\n<pre>\n$ npm test\n</pre>\n\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2013 Yuki Takei(Noppoman) <yuki@miketokyo.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "node-mariadb@0.1.1",
  "dist": {
    "shasum": "c2dc8197994de3edf8f41f58d0c09eb1e973825c"
  },
  "_from": "node-mariadb@",
  "_resolved": "https://registry.npmjs.org/node-mariadb/-/node-mariadb-0.1.1.tgz"
}
